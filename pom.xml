<?xml version="1.0" encoding="UTF-8" standalone="no"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.4.8</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.intuit.graphql</groupId>
  <artifactId>graphql-gateway-java</artifactId>
  <version>1.0.71-SNAPSHOT</version>
  <name>graphql-gateway-java</name>
  <description>Graphql Gateway</description>

  <properties>
    <java.version>1.8</java.version>
    <jacoco.version>0.8.4</jacoco.version>
    <graphql-orchestrator.version>4.0.9</graphql-orchestrator.version>
    <rest-adapter.version>1.0.16</rest-adapter.version>
    <log4j2.version>2.17.0</log4j2.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>bom</artifactId>
        <version>2.16.12</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <!--	SpringBoot 2.4.8 does not load bootstrap.yml by default-->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-bootstrap</artifactId>
      <version>3.0.3</version>
      <exclusions>
        <exclusion>
          <artifactId>bcpkix-jdk15on</artifactId>
          <groupId>org.bouncycastle</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

  <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
      <exclusions>
          <exclusion>
              <groupId>org.hamcrest</groupId>
              <artifactId>hamcrest-core</artifactId>
          </exclusion>
      </exclusions>
  </dependency>

    <!--
    Temporary fix fox Nexus IQ Vulnerability report for fasterxml 2.9.X.X
    Watch for JSK BOM updates.  2.7.13 still using fasterxml 2.9.9.X
    -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.10.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.10.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>2.10.2</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.22</version>
    </dependency>

    <dependency>
      <groupId>com.intuit.graphql</groupId>
      <artifactId>graphql-authorization-java</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>2.7.5</version>
    </dependency>
    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
      <version>0.9.3</version>
    </dependency>
  <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
  </dependency>
    <dependency>
      <groupId>com.intuit.graphql</groupId>
      <artifactId>graphql-orchestrator-java</artifactId>
      <version>${graphql-orchestrator.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>3.14.2</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>mockwebserver</artifactId>
      <version>3.14.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>2.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>2.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>2.27.2</version>
      <scope>test</scope>
    </dependency>

    <!--Registry-->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>s3</artifactId>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>5.3</version>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.1.1</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>*.yml</include>
          <include>*.xml</include>
          <include>*.html</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>true</executable>
          <finalName>${project.artifactId}</finalName>
          <includeSystemScope>true</includeSystemScope>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <configuration>
          <footer>2018 Intuit, Inc. Generated ${maven.build.timestamp}</footer>
          <excludes>
            <exclude>**/Immutable*.*</exclude>
            <exclude>com/intuit/cg/data/api/utils/*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules />
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-javadoc</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <scm>
    <developerConnection>scm:git:https://github.com/intuit/graphql-gateway-java</developerConnection>
    <connection>scm:git:https://github.com/intuit/graphql-gateway-java
    </connection>
    <url>https://github.com/intuit/graphql-gateway-java</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>ossrh</id>
      <name>Sonatype Repository</name>
      <url>https://oss.sonatype.org/content/repositories/releases</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>ossrh</id>
      <name>Sonatype Repository</name>
      <url>https://oss.sonatype.org/content/repositories/releases</url>
    </pluginRepository>
  </pluginRepositories>
  <profiles>
    <profile>
        <id>docker</id>
        <activation>
            <!-- To activate this profile the system property "docker" must have the value "true" -->
            <property>
                <name>docker</name>
                <value>true</value>
            </property>
            <file>
                <exists>Dockerfile</exists>
            </file>
        </activation>
        <properties>
            <docker.image.name>docker.intuit.com/data-dataportal/intuit-data-api/service/intuit-data-api</docker.image.name>
            <docker.image.label>latest</docker.image.label>
        </properties>
        <build>
            <plugins>
                <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>buildnumber-maven-plugin</artifactId>
                  <version>1.4</version>
                  <executions>
                    <execution>
                      <phase>validate</phase>
                    <goals>
                      <goal>create</goal>
                    </goals>
                  </execution>
                  </executions>
                  <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <shortRevisionLength>7</shortRevisionLength>
                  </configuration>
                </plugin>
                <plugin>
                  <artifactId>exec-maven-plugin</artifactId>
                  <groupId>org.codehaus.mojo</groupId>
                  <executions>
                    <execution>
                      <id>Tag image</id>
                      <phase>deploy</phase>
                      <goals>
                        <goal>exec</goal>
                      </goals>
                      <configuration>
                          <executable>docker</executable>
                          <commandlineArgs>tag ${docker.image.name}:${project.version}-${buildNumber} ${docker.image.name}:${pom.artifact.version}</commandlineArgs>
                      </configuration>
                    </execution>
                  </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.29.0</version>
                    <extensions>true</extensions>
                    <configuration>
                        <imagePullPolicy>IfNotPresent</imagePullPolicy>
                        <logStdout>true</logStdout>
                        <verbose>true</verbose>
                        <useColor>true</useColor>
                    </configuration>
                    <executions>
                        <execution>
                            <id>Build image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <images>
                                    <image>
                                        <alias>service image</alias>
                                        <name>${docker.image.name}:${project.version}-${buildNumber}</name>
                                        <build>
                                            <contextDir>${project.basedir}</contextDir>
                                            <dockerFile>Dockerfile</dockerFile>
                                            <args>
                                                <ARTIFACT_FILE>${project.build.finalName}.${project.packaging}</ARTIFACT_FILE>
                                            </args>
                                            <tags>
                                                <tag>${docker.image.label}</tag>
                                            </tags>
                                        </build>
                                    </image>
                                </images>
                            </configuration>
                        </execution>
                        <execution>
                            <id>Verify image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                                <images>
                                    <image>
                                        <alias>CPD service image</alias>
                                        <name>docker.intuit.com/oicp/standard/cpd:0.4.1</name>
                                        <run>
                                            <log>
                                                <enabled>true</enabled>
                                                <date>default</date>
                                                <color>cyan</color>
                                            </log>
                                            <volumes>
                                                <bind>
                                                    <volume>${project.basedir}:/workspace</volume>
                                                    <volume>/var/run/docker.sock:/var/run/docker.sock</volume>
                                                </bind>
                                            </volumes>
                                            <env>
                                                <SCAN_SERVER>https://artifactscan.a.intuit.com:8083</SCAN_SERVER>
                                                <SCAN_USER>${env.SCAN_USER}</SCAN_USER>
                                                <SCAN_PASSWORD>${env.SCAN_PASSWORD}</SCAN_PASSWORD>
                                                <DOCKER_USERNAME>${env.DOCKER_USERNAME}</DOCKER_USERNAME>
                                                <DOCKER_PASSWORD>${env.DOCKER_PASSWORD}</DOCKER_PASSWORD>
                                            </env>
                                            <entrypoint>/cpd</entrypoint>
                                           <cmd>--buildargs ARTIFACT_FILE=${project.build.finalName}.${project.packaging} --buildargs DOCKER_TAGS=${project.version}-${buildNumber} -removelocalbuild=false</cmd>
                                            <wait>
                                                <time>1000000</time>
                                                <exit>0</exit>
                                            </wait>
                                        </run>
                                    </image>
                                </images>
                            </configuration>
                        </execution>
                        <execution>
                            <id>Push image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <images>
                                    <image>
                                        <alias>service image</alias>
                                        <name>${docker.image.name}:${pom.artifact.version}</name>
                                        <build>
                                            <tags>
                                                <tag>${docker.image.label}</tag>
                                            </tags>
                                        </build>
                                    </image>
                                </images>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
</profiles>
</project>
